Необходимо реализовать приложение, которое будет автоматически проводить эксперименты на стенде, с использованием
пьезо-элемента. Для использования пьезо-элемента и передачи команд используется уже готовая и написанная библиотека pztlibrary.usart_lib

Наше приложение должно давать возможность инженеру установить минимальный и максимальный параметры для:
A - Амплитуда, B - Биас, Смещение, F - Частота, T - тип волны, Prefix - префикс для файловых значений и папок.
Помимо этого в приложении можно указать папку для экспорта значений.
Также далее нам понадобятся следующие значения которые тоже должны быть устанавливаемы, они нужны для активации программы .exe
--dir "refls1" --nfiles 3 --nrefls 10000
Приложение должно запоминать прошлые указанные параметры, для этого к примеру можно использовать json.
После того, как инженер установил эти значения, то мы передаём их в библиотеку (A, B, F, T).
Приложение создаст папку с наименованием Prefix, если таковой на момент запуска не имеется.

Далее наше приложение для эксперимента начнёт идти шагами от минимума к максимуму по указанным параметрам и начинается шаг первый
1. Оно будет передавать эти значения посредством библиотеки pztlibrary.usart_lib в устройство, где библиотека
это внешняя рабочая обёртка. После того как данные были переданы на пьезоэлемент приступаем к шагу 2.
2. Запускаем через subprocess.check_call следующей командой ./udp_das_cringe.exe --dir "refls1" --nfiles 3 --nrefls 10000
запускаем udp_das_cringe.exe, который создаёт рефлектограммы. Мы ждём, пока получим данные с АЦП через .exe (.exe лежит в Alinx C Interrogate programm tool)
Программа положит рефлектограммы в указанную папку refls1. Мы фиксируем выходной код процесса, так как программа после этого закроется.
После того как мы зафиксировали код процесса мы начинаем следующий шаг
3. Инициируем процесс перекладывания файлов рефлектограммы внутрь папки с названием Prefix, но при этом для каждой группы рефлектограмм мы создаём свою папку с названием: {i}_{j}_{k}_{prefix} f={F} a={A} b={B}
подробнее про i j k, это просто цифры от 1 до 9. к примеру. 1_1_1, потом 1_1_2, потом 1_1_3 и так до 1_1_9, после чего начинается 1_2_1 и так далее.
После этго возвращаемся к началу итерации и повторяем всё тоже самое, пока мы таким образом не закончим шагать указанными шагами.